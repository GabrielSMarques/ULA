// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "04/12/2018 19:34:23"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          sdProjectMuxDec
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module sdProjectMuxDec_vlg_vec_tst();
// constants                                           
// general purpose registers
reg IN0;
reg IN1;
reg IN2;
reg IN3;
reg IN4;
reg IN5;
reg IN6;
reg S0;
reg S1;
reg S2;
// wires                                               
wire OUT0;
wire OUT1;
wire OUT2;
wire OUT3;
wire OUT4;
wire OUT5;
wire OUT6;

// assign statements (if any)                          
sdProjectMuxDec i1 (
// port map - connection between master ports and signals/registers   
	.IN0(IN0),
	.IN1(IN1),
	.IN2(IN2),
	.IN3(IN3),
	.IN4(IN4),
	.IN5(IN5),
	.IN6(IN6),
	.OUT0(OUT0),
	.OUT1(OUT1),
	.OUT2(OUT2),
	.OUT3(OUT3),
	.OUT4(OUT4),
	.OUT5(OUT5),
	.OUT6(OUT6),
	.S0(S0),
	.S1(S1),
	.S2(S2)
);
initial 
begin 
#1000000 $finish;
end 

// IN0
initial
begin
	IN0 = 1'b1;
end 

// IN1
initial
begin
	IN1 = 1'b0;
end 

// IN2
initial
begin
	IN2 = 1'b1;
end 

// IN3
initial
begin
	IN3 = 1'b0;
end 

// IN4
initial
begin
	IN4 = 1'b0;
end 

// IN5
initial
begin
	IN5 = 1'b1;
end 

// IN6
initial
begin
	IN6 = 1'b0;
end 

// S0
initial
begin
	S0 = 1'b0;
end 

// S1
initial
begin
	S1 = 1'b1;
end 

// S2
initial
begin
	S2 = 1'b1;
end 
endmodule

